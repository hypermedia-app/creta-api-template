_subdirectory: src
_templates_suffix: .jinja

_envops:
  block_end_string: "%}"
  block_start_string: "{%"
  comment_end_string: "#}"
  comment_start_string: "{#"
  keep_trailing_newline: true
  variable_end_string: "}}"
  variable_start_string: "{{"

_tasks:
  - "npx json -If apps/{{api}}/package.json 
      -e 'this.name=\"@{{organization}}/{{api}}\"'
      -e 'this.scripts.bootstrap = this.scripts.bootstrap.replace(\"$api\", \"${{api | upper}}\")'
    "

resource_get_handler:
  type: bool
  default: true
  help: Add default GET handler of all instances of hydra:Resource

collection_get_handler:
  type: bool
  default: true
  help: Add default GET handler of all instances of hydra:Collection

writable_hydra_class:
  type: bool
  default: false
  help: Add PUT/DELETE handlers of instances of hydra:Class and a /api/classes collection resource

api_delete_handler:
  type: bool
  default: false
  help: Add support for DELETE /api which lets the caller force a recreation of the API Documentation's representation

writable_event_handlers:
  type: bool
  default: false
  help: Add support for creating event handler resources

event_handlers:
  type: bool
  default: "{{writable_event_handlers or api_delete_handler}}"

writable_acl:
  type: bool
  default: false
  help: Add support for creating acl:Authorization resources with PUT
